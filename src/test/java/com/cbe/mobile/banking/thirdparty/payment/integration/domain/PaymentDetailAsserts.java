package com.cbe.mobile.banking.thirdparty.payment.integration.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PaymentDetailAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentDetailAllPropertiesEquals(PaymentDetail expected, PaymentDetail actual) {
        assertPaymentDetailAutoGeneratedPropertiesEquals(expected, actual);
        assertPaymentDetailAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentDetailAllUpdatablePropertiesEquals(PaymentDetail expected, PaymentDetail actual) {
        assertPaymentDetailUpdatableFieldsEquals(expected, actual);
        assertPaymentDetailUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentDetailAutoGeneratedPropertiesEquals(PaymentDetail expected, PaymentDetail actual) {
        assertThat(expected)
            .as("Verify PaymentDetail auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentDetailUpdatableFieldsEquals(PaymentDetail expected, PaymentDetail actual) {
        assertThat(expected)
            .as("Verify PaymentDetail relevant properties")
            .satisfies(
                e -> assertThat(e.getComputedPaymentDetail()).as("check computedPaymentDetail").isEqualTo(actual.getComputedPaymentDetail())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentDetailUpdatableRelationshipsEquals(PaymentDetail expected, PaymentDetail actual) {
        assertThat(expected)
            .as("Verify PaymentDetail relationships")
            .satisfies(e -> assertThat(e.getApiRequest()).as("check apiRequest").isEqualTo(actual.getApiRequest()))
            .satisfies(e -> assertThat(e.getOperation()).as("check operation").isEqualTo(actual.getOperation()));
    }
}
