package com.cbe.mobile.banking.thirdparty.payment.integration.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class HeaderAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHeaderAllPropertiesEquals(Header expected, Header actual) {
        assertHeaderAutoGeneratedPropertiesEquals(expected, actual);
        assertHeaderAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHeaderAllUpdatablePropertiesEquals(Header expected, Header actual) {
        assertHeaderUpdatableFieldsEquals(expected, actual);
        assertHeaderUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHeaderAutoGeneratedPropertiesEquals(Header expected, Header actual) {
        assertThat(expected)
            .as("Verify Header auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHeaderUpdatableFieldsEquals(Header expected, Header actual) {
        assertThat(expected)
            .as("Verify Header relevant properties")
            .satisfies(e -> assertThat(e.getKey()).as("check key").isEqualTo(actual.getKey()))
            .satisfies(e -> assertThat(e.getValue()).as("check value").isEqualTo(actual.getValue()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHeaderUpdatableRelationshipsEquals(Header expected, Header actual) {
        assertThat(expected)
            .as("Verify Header relationships")
            .satisfies(e -> assertThat(e.getApiRequest()).as("check apiRequest").isEqualTo(actual.getApiRequest()));
    }
}
