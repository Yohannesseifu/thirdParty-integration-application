package com.cbe.mobile.banking.thirdparty.payment.integration.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FieldUIMetaDataAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFieldUIMetaDataAllPropertiesEquals(FieldUIMetaData expected, FieldUIMetaData actual) {
        assertFieldUIMetaDataAutoGeneratedPropertiesEquals(expected, actual);
        assertFieldUIMetaDataAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFieldUIMetaDataAllUpdatablePropertiesEquals(FieldUIMetaData expected, FieldUIMetaData actual) {
        assertFieldUIMetaDataUpdatableFieldsEquals(expected, actual);
        assertFieldUIMetaDataUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFieldUIMetaDataAutoGeneratedPropertiesEquals(FieldUIMetaData expected, FieldUIMetaData actual) {
        assertThat(expected)
            .as("Verify FieldUIMetaData auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFieldUIMetaDataUpdatableFieldsEquals(FieldUIMetaData expected, FieldUIMetaData actual) {
        assertThat(expected)
            .as("Verify FieldUIMetaData relevant properties")
            .satisfies(e -> assertThat(e.getLabel()).as("check label").isEqualTo(actual.getLabel()))
            .satisfies(e -> assertThat(e.getInputInterface()).as("check inputInterface").isEqualTo(actual.getInputInterface()))
            .satisfies(e -> assertThat(e.getWidth()).as("check width").isEqualTo(actual.getWidth()))
            .satisfies(e -> assertThat(e.getNote()).as("check note").isEqualTo(actual.getNote()))
            .satisfies(e -> assertThat(e.getValidationPattern()).as("check validationPattern").isEqualTo(actual.getValidationPattern()))
            .satisfies(e -> assertThat(e.getOptions()).as("check options").isEqualTo(actual.getOptions()))
            .satisfies(e -> assertThat(e.getDisplayOptions()).as("check displayOptions").isEqualTo(actual.getDisplayOptions()))
            .satisfies(e -> assertThat(e.getConditions()).as("check conditions").isEqualTo(actual.getConditions()))
            .satisfies(e -> assertThat(e.getTranslations()).as("check translations").isEqualTo(actual.getTranslations()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFieldUIMetaDataUpdatableRelationshipsEquals(FieldUIMetaData expected, FieldUIMetaData actual) {}
}
