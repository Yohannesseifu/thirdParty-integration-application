package com.cbe.mobile.banking.thirdparty.payment.integration.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PaymentParamAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentParamAllPropertiesEquals(PaymentParam expected, PaymentParam actual) {
        assertPaymentParamAutoGeneratedPropertiesEquals(expected, actual);
        assertPaymentParamAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentParamAllUpdatablePropertiesEquals(PaymentParam expected, PaymentParam actual) {
        assertPaymentParamUpdatableFieldsEquals(expected, actual);
        assertPaymentParamUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentParamAutoGeneratedPropertiesEquals(PaymentParam expected, PaymentParam actual) {
        assertThat(expected)
            .as("Verify PaymentParam auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentParamUpdatableFieldsEquals(PaymentParam expected, PaymentParam actual) {
        assertThat(expected)
            .as("Verify PaymentParam relevant properties")
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()))
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getValue()).as("check value").isEqualTo(actual.getValue()))
            .satisfies(e -> assertThat(e.getDataType()).as("check dataType").isEqualTo(actual.getDataType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentParamUpdatableRelationshipsEquals(PaymentParam expected, PaymentParam actual) {
        assertThat(expected)
            .as("Verify PaymentParam relationships")
            .satisfies(e -> assertThat(e.getPaymentDetail()).as("check paymentDetail").isEqualTo(actual.getPaymentDetail()));
    }
}
